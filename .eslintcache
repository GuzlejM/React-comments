[{"/mnt/c/Users/marti/Desktop/React/components/src/index.js":"1"},{"size":2281,"mtime":1608662556682,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"132w4rr","/mnt/c/Users/marti/Desktop/React/components/src/index.js",["7"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport faker from 'faker';\n\n\n// TODO \n    // Refactor separate to components,\n    // Import faker databases\n\nconst firstName = faker.name.firstName()\nconst lastName = faker.name.lastName()\n        \nconst App = () => {\n  return (      \n      <div className=\"flex items-center h-screen w-full justify-around\">\n        \n        <div className=\"max-w-xs\">\n          <div className=\"bg-white shadow-xl rounded-lg py-3\">\n            <div className=\"photo-wrapper p-2\">\n                <img \n                  className=\"w-32 h-32 rounded-full mx-auto\" \n                  src={ faker.image.business() } \n                  alt={ `${firstName}, ${lastName} ` } />\n            </div>\n            <div className=\"p-2\">\n                <h3 className=\"text-center text-xl text-gray-900 font-medium leading-8\">\n                    { `${firstName}, ${lastName} ` }\n                </h3>\n                <div className=\"text-center text-gray-400 text-xs font-semibold\">\n                    <p>{ faker.name.jobTitle()}</p>\n                </div>\n                <table className=\"text-xs my-3\">\n                    <tbody><tr>\n                        <td className=\"px-2 py-2 text-gray-500 font-semibold\">Address</td>\n                        <td className=\"px-2 py-2\">{ `${faker.address.country()}, ${faker.address.city()} ` }</td>\n                    </tr>\n                    <tr>\n                        <td className=\"px-2 py-2 text-gray-500 font-semibold\">Phone</td>\n                        <td className=\"px-2 py-2\">{ `+44/${faker.phone.phoneNumberFormat()}` }</td>\n                    </tr>\n                    <tr>\n                        <td className=\"px-2 py-2 text-gray-500 font-semibold\">Email</td>\n                        <td className=\"px-2 py-2\">{ `${firstName}.${lastName}@${faker.company.companyName()}.com` }</td>\n                    </tr>\n                </tbody></table>\n                <div className=\"text-center my-3\">\n                    <a className=\"text-xs text-indigo-500 italic hover:underline hover:text-indigo-600 font-medium\" href=\"#\">View Profile</a>\n                </div>\n            </div>\n          </div>\n        </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));",{"ruleId":"8","severity":1,"message":"9","line":47,"column":21,"nodeType":"10","endLine":47,"endColumn":126},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]